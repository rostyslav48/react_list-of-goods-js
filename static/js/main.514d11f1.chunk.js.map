{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","goodsWithId","map","product","index","id","getSortedGoods","goods","sortField","isReversed","goodsCopy","_toConsumableArray","sort","goodA","goodB","localeCompare","length","getSortCallback","reverse","App","_useState","useState","_useState2","_slicedToArray","setSortField","_useState3","_useState4","setIsReversed","sortedGoods","_jsxs","className","children","_jsx","type","cn","onClick","Boolean","_ref","ReactDOM","render","document","getElementById"],"mappings":"iPAmBMA,EAAsB,WACtBC,EAAoB,SACpBC,EAfyB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQaC,KAAI,SAACC,EAASC,GAAK,MAAM,CAAED,UAASE,GAAID,EAAQ,MAkB/D,SAASE,EAAeC,EAAOC,EAAWC,GACxC,IAAMC,EAASC,YAAOJ,GAQtB,OANAG,EAAUE,KAlBZ,SAAyBJ,GACvB,OAAO,SAACK,EAAOC,GACb,OAAQN,GACN,KAAKT,EACH,OAAOc,EAAMV,QAAQY,cAAcD,EAAMX,SAE3C,KAAKH,EACH,OAAOa,EAAMV,QAAQa,OAASF,EAAMX,QAAQa,OAE9C,QACE,OAAO,IAQEC,CAAgBT,IAE3BC,GACFC,EAAUQ,UAGLR,EAGF,IAAMS,EAAM,WACjB,IAAAC,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCZ,EAASc,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAAoCJ,oBAAS,GAAMK,EAAAH,YAAAE,EAAA,GAA5ChB,EAAUiB,EAAA,GAAEC,EAAaD,EAAA,GAC1BE,EAActB,EAAeL,EAAaO,EAAWC,GAQ3D,OACEoB,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,iBAAkB,CAC9B,WAAYnC,IAAwBS,IAEtC2B,QAAS,kBAAMX,EAAazB,IAAqBgC,SAClD,wBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,oBAAqB,CACjC,WAAYlC,IAAsBQ,IAEpC2B,QAAS,kBAAMX,EAAaxB,IAAmB+B,SAChD,mBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,oBAAqB,CACjC,YAAazB,IAEf0B,QAAS,kBAAMR,GAAelB,IAAYsB,SAC3C,aAnCiBK,QAAQ5B,IAAcC,IAwCtCuB,cAAA,UACEC,KAAK,SACLH,UAAU,4BACVK,QA1CiB,WACzBX,EAAa,IACbG,GAAc,IAwCsBI,SAC7B,aAMLC,cAAA,MAAAD,SACGH,EAAY1B,KAAI,SAAAmC,GAAA,IAAGlC,EAAOkC,EAAPlC,QAASE,EAAEgC,EAAFhC,GAAE,OAC7B2B,cAAA,MAAI,UAAQ,OAAMD,SAAW5B,GAALE,YC5GlCiC,IAASC,OACPP,cAACb,EAAG,IACJqB,SAASC,eAAe,W","file":"static/js/main.514d11f1.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\nconst goodsWithId = getGoodsWithId(goodsFromServer);\n\nfunction getGoodsWithId(goods) {\n  return goods.map((product, index) => ({ product, id: index + 1 }));\n}\n\nfunction getSortCallback(sortField) {\n  return (goodA, goodB) => {\n    switch (sortField) {\n      case SORT_FIELD_ALPHABET:\n        return goodA.product.localeCompare(goodB.product);\n\n      case SORT_FIELD_LENGTH:\n        return goodA.product.length - goodB.product.length;\n\n      default:\n        return 0;\n    }\n  };\n}\n\nfunction getSortedGoods(goods, sortField, isReversed) {\n  const goodsCopy = [...goods];\n\n  goodsCopy.sort(getSortCallback(sortField));\n\n  if (isReversed) {\n    goodsCopy.reverse();\n  }\n\n  return goodsCopy;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const sortedGoods = getSortedGoods(goodsWithId, sortField, isReversed);\n\n  const isChanged = () => Boolean(sortField) || isReversed;\n  const resetFilterOptions = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': SORT_FIELD_ALPHABET !== sortField,\n          })}\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': SORT_FIELD_LENGTH !== sortField,\n          })}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isChanged() && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetFilterOptions}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(({ product, id }) => (\n          <li data-cy=\"Good\" key={id}>{product}</li>\n        ))\n\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}